<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_start();

screenWidth  = 1024;
screenHeight = 768;

/*
 * Create all matrices, quaternions and vectors
 */

matProj = MAE_MatrixCreatePerspective(90, screenWidth / screenHeight, 1, 128);
matView = MAE_MatrixCreateIdentity(4);
matNorm = MAE_MatrixCreateIdentity(3);

vecPoint = MAE_VectorCreate(0, 0, 0);

quatView = MAE_QuaternionNorm(MAE_QuaternionCreateRotation(135, 0, -45, EULER_ZYX));


/*
 * Those variables are used for the smooth rotation
 */
 
curX = 0;
curY = 0;
desX = 0;
desY = 0;


/*
 * Animation stuff.
 */
MAE_AnimationCreate();
hobgoblin_run = MAE_AnimationAdd(40, 45); //Running,
MAE_AnimationSet(hobgoblin_run);

/**
 * Load texture
 */

var t = MAE_TextureCreateFromFile("COMMON/TEXTURE/hobgoblin.bmp", MIPMAPS_NONE);

/**
 * Load model
 */

global.m = MAE_ModelMD2Load("COMMON/MODEL/hobgoblin.md2", t);

/**
 * Free texture because we don't need it anymore
 */

MAE_TextureDestroy(t);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
 * Rotation of the model
 * curX/Y contains the point where the program thinks the mouse is
 * desX/Y contains the point of the actual position
 */

if (mouse_check_button_pressed(mb_left)) {
    curX = mouse_x;
    curY = mouse_y;
}

if (mouse_check_button(mb_left)) {
    desX = mouse_x;
    desY = mouse_y;
}

/*
 * Rotate the quaternion and normalize it
 */

quatView = MAE_QuaternionNorm(MAE_QuaternionRotate(quatView, (desY - curY) * 0.2, (desX - curX) * 0.2, 0));

/*
 * Make the difference smaller each step by 20%
 */

curX += (desX - curX) * 0.2;
curY += (desY - curY) * 0.2;

/*
 * Calculate view and normal matrix
 */

matView = MAE_MatrixTranslate(MAE_MatrixCreateRotationQuaternion(4, quatView), MAE_VectorCreate(0, 0, 3));
matNorm = MAE_MatrixCreateNormalMatrix(MAE_MatrixToMat3(matView));

/**
 * Animation stuff.
 */
MAE_AnimationUpdate(5);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MAE_ModelMD2Destroy(global.m);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
draw_text(room_width - 196, 0, "Time: " + string(MAE_AnimationGetTween()));
draw_text(room_width - 196, 16, "Frame: " + string(MAE_AnimationGetFrame())+", "+string(MAE_AnimationGetFrameNext()));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>matrix_set(matrix_projection, matProj);
matrix_set(matrix_view, matView);


d3d_transform_add_scaling(0.06, 0.06, 0.06);
    MAE_ModelMD2Render(global.m, MAE_AnimationGetFrame(), MAE_AnimationGetFrameNext(), MAE_AnimationGetTween());
d3d_transform_set_identity();


/*
 * Draw X, Y and Z Axis
 */

d3d_primitive_begin(pr_linelist);
d3d_vertex_colour(0, 0, 0, c_red, 1);
d3d_vertex_colour(2, 0, 0, c_red, 1);
d3d_vertex_colour(0, 0, 0, c_green, 1);
d3d_vertex_colour(0, 2, 0, c_green, 1);
d3d_vertex_colour(0, 0, 0, c_blue, 1);
d3d_vertex_colour(0, 0, 2, c_blue, 1);
d3d_primitive_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
